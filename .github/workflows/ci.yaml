# # # name: CI Pipeline

# # # # This workflow runs on a push, pull request, or a scheduled time (cron job)
# # # on:
# # #   push:
# # #     branches:
# # #       - main
# # #   pull_request:
# # #     branches:
# # #       - main
# # #   schedule:
# # #     - cron: "0 0 * * *"  # Runs daily at midnight UTC

# # # jobs:
# # #   build:
# # #     runs-on: ubuntu-latest

# # #     steps:
# # #       # Step 1: Checkout the repository
# # #       - name: Checkout Code
# # #         uses: actions/checkout@v2

# # #       # Step 2: Set up Python environment
# # #       - name: Set up Python 3.x
# # #         uses: actions/setup-python@v2
# # #         with:
# # #           python-version: '3.x'

# # #       # Step 3: Install dependencies (adjust based on your project requirements)
# # #       - name: Install Dependencies
# # #         run: |
# # #           python -m pip install --upgrade pip
# # #           pip install requests scikit-learn openai pdfkit matplotlib

# # #       # Step 4: Collect GitHub Commit and Pull Request Data
# # #       - name: Collect Commit and PR Data
# # #         run: |
# # #           python collect_vcs_data.py

# # #       # Step 5: Run tests (add your test commands if applicable)
# # #       - name: Run Tests
# # #         run: |
# # #           echo "Run your test scripts here (e.g., pytest or npm run test)"

# # #       # Step 6: Analyze Data with ML and LLM (like GPT-4)
# # #       - name: Analyze Data
# # #         run: |
# # #           python analyze_vcs_data.py

# # #       # Step 7: Generate DevOps Maturity Report
# # #       - name: Generate Report
# # #         run: |
# # #           python generate_report.py

# # #       # Step 8: Upload the report as an artifact
# # #       - name: Upload DevOps Maturity Report
# # #         uses: actions/upload-artifact@v2
# # #         with:
# # #           name: devops-report
# # #           path: devops_maturity_report.pdf




# # name: CI Pipeline

# # on:
# #   push:
# #     branches:
# #       - main
# #   pull_request:
# #     branches:
# #       - main
# #   schedule:
# #     - cron: "0 0 * * *"

# # jobs:
# #   build:
# #     runs-on: ubuntu-22.04 # Use specific runner version as per your setup

# #     steps:
# #       # Step 1: Checkout the repository (use the latest version)
# #       - name: Checkout Code
# #         uses: actions/checkout@v3

# #       # Step 2: Set up Python environment (use the latest version)
# #       - name: Set up Python 3.x
# #         uses: actions/setup-python@v4
# #         with:
# #           python-version: '3.x'

# #       # Step 3: Install dependencies (modify as needed)
# #       - name: Install Dependencies
# #         run: |
# #           python -m pip install --upgrade pip
# #           pip install requests scikit-learn openai pdfkit matplotlib

# #       # Step 4: Collect GitHub Data (running your Python script)
# #       - name: Collect Commit and PR Data
# #         run: |
# #           python collect_vcs_data.py

# #       # Step 5: Run tests (optional, modify based on your tests)
# #       - name: Run Tests
# #         run: |
# #           echo "Run your test scripts here"

# #       # Step 6: Analyze Data (ML & LLM, running another Python script)
# #       - name: Analyze Data
# #         run: |
# #           python analyze_vcs_data.py

# #       # Step 7: Generate DevOps Report (this will generate the PDF)
# #       - name: Generate Report
# #         run: |
# #           python generate_report.py

# #       # Step 8: Upload Report as Artifact (upload generated PDF)
# #       - name: Upload Report
# #         uses: actions/upload-artifact@v3
# #         with:
# #           name: devops-report
# #           path: devops_maturity_report.pdf

# name: CI Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#   schedule:
#     - cron: "0 0 * * *" # This will trigger the workflow daily at midnight UTC

# jobs:
#   build:
#     runs-on: ubuntu-22.04 # Use a specific runner version as per your setup

#     steps:
#       # Step 1: Checkout the repository (use the latest version)
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       # Step 2: Set up Python environment (use the latest version)
#       - name: Set up Python 3.x
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.x' # Set your desired Python version here

#       # Step 3: Install wkhtmltopdf
#       - name: Install wkhtmltopdf
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y wkhtmltopdf

#       # Step 3: Install dependencies (modify as needed)
#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install requests scikit-learn openai pdfkit matplotlib

#       # Step 4: Collect GitHub Data (running your Python script)
#       - name: Collect Commit and PR Data
#         run: |
#           python scripts/collect_vcs_data.py # Adjusted path to point to scripts directory

#       # # Step 5: Run tests (optional, modify based on your tests)
#       # - name: Run Tests
#       #   run: |
#       #     echo "Run your test scripts here" # Replace this with actual test commands if needed

#       # Step 6: Analyze Data (ML & LLM, running another Python script)
#       - name: Analyze Data
#         run: |
#           python scripts/analyze_commit_messages.py # Adjusted path to point to scripts directory

#       # Step 7: Generate DevOps Report (this will generate the PDF)
#       - name: Generate Report
#         run: |
#           python scripts/generate_report.py # Adjusted path to point to scripts directory

#       # Step 8: Upload Report as Artifact (upload generated PDF)
#       - name: Upload Report
#         uses: actions/upload-artifact@v3
#         with:
#           name: devops-report
#           path: devops_maturity_report.pdf # Ensure the report is generated in the root directory










name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *" # This will trigger the workflow daily at midnight UTC

jobs:
  build:
    runs-on: ubuntu-22.04 # Use a specific runner version as per your setup

    steps:
      # Step 1: Checkout the repository (use the latest version)
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment (use the latest version)
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' # Set your desired Python version here

      # Step 3: Install wkhtmltopdf
      - name: Install wkhtmltopdf
        run: |
          sudo apt-get update
          sudo apt-get install -y wkhtmltopdf

      # Step 4: Install dependencies (modify as needed)
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests openai pdfkit matplotlib python-dotenv

      # Step 5: Collect GitHub Data (running your Python script)
      - name: Collect Commit and PR Data
        env:
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          python scripts/collect_vcs_data.py # Adjusted path to point to scripts directory

      # Step 6: Analyze Data (ML & LLM, running another Python script)
      - name: Analyze Data
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/analyze_commit_messages.py # Adjusted path to point to scripts directory

      # Step 7: Generate DevOps Report (this will generate the PDF)
      - name: Generate Report
        run: |
          python scripts/generate_report.py # Adjusted path to point to scripts directory

      # Step 9: Configure Git
      - name: Configure Git
        run: |
          git config --global user.email "shobithanayak2405@gmail.com"  # Replace with your email
          git config --global user.name "Shobitha U Nayak"  # Replace with your name

      # Step 10: Commit and push the report
      - name: Commit and Push Report
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git add outputs/commit_data.json
          git add outputs/build_success_rate.txt
          git add outputs/insights.txt
          git add outputs/devops_maturity_report.pdf
          git add outputs/plot.png           # Ensure path is correct based on your script
          git commit -m "Update report and insights"
          git push https://$GITHUB_TOKEN@github.com/Shobitha-nayak/dev-gen.git HEAD:main

      # Step 9: Upload Report as Artifact (optional, if you still want to keep this)
      - name: Upload Report
        uses: actions/upload-artifact@v3
        with:
          name: devops-report
          path: outputs/devops_maturity_report.pdf # Ensure the report is generated in the outputs directory

